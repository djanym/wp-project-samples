{"version":3,"sources":["main.min.js"],"names":["$","jQuery","noConflict","scrollToObj","selector","correction","position","offset","correction_value","parseInt","length","outerHeight","y","top","animate","scrollTop","document","ready","removeClass","window","onscroll","addClass","scroll","location","hash","setTimeout","not","on","event","this","preventDefault","click","off","msnry","imgLoad","Masonry","itemSelector","imagesLoaded","layout","InfiniteScroll","path","loadOnScroll","prefill","append","history","outlayer","each","lazy","css","attr","src","lazy_id","get","data","content","innerHTML","html"],"mappings":"AAAA,IAAIA,EAAIC,OAAOC,aAqIf,SAASC,YAAaC,EAAUC,GAC/B,IACIC,EADIN,EAAGI,GACMG,SACbC,EAAmB,EAClBC,SAAUJ,GAAe,EAC7BG,EAAmBH,EACRL,EAAGK,GAAaK,OAAS,IACpCF,EAAmBR,EAAGK,GAAaM,eAEpC,IAAIC,EAAIN,EAASO,IAAML,EACvBR,EAAG,cAAec,QAAS,CAC1BC,UAAWH,GACT,KA/IJX,OAAQe,UAAWC,OAAO,SAAUjB,GACnCA,EAAG,mBAAoBkB,YAAa,kBAGpCC,OAAOC,SAAW,WACZpB,EAAGmB,QAASJ,YAAc,EAC9Bf,EAAG,QAASqB,SAAU,gBAEtBrB,EAAG,QAASkB,YAAa,iBAK3BlB,EAAGmB,QAASG,YAIbtB,GAAG,WAEF,GAAGmB,OAAOI,SAASC,KAAM,CAQxBC,YAPsB,WACrB,IAAID,EAAOL,OAAOI,SAASC,KACrBxB,EAAGwB,GAAOd,QAGhBP,YAAaqB,EAAM,iBAEQ,KAI7BxB,EAAG,KACD0B,IAAK,kDACLC,GAAI,SAAS,SAAUC,GAGvB,GAAmB,KAAdC,KAAKL,KAAc,CAEvB,IAAIA,EAAOK,KAAKL,KAEhB,IAAMxB,EAAGwB,GAAOd,OACf,OAIDkB,EAAME,iBAEN3B,YAAaqB,EAAM,mBAOtBxB,EAAG,+BAAgC+B,OAAO,SAAUH,GACnDA,EAAME,oBAEP9B,EAAG,+BAAgCgC,IAAK,YAIzChC,GAAG,WACF,IAAIiC,EAAOC,EAcX,GAbwB,oBAAZC,SACXF,EAAQ,IAAIE,QAAS,mBAAoB,CACxCC,aAAc,UAEfF,EAAUG,aAAcrC,EAAG,qBAE3BkC,EAAQP,GAAI,YAAY,WACvBM,EAAMK,aAGPL,EAAQ,KAGsB,oBAAnBM,gBACXvC,EAAG,uBAAwBU,OAAS,CAGpC6B,eAAeF,aAAeA,aAGV,IAAIE,eAAgB,6BAA8B,CACrEC,KAAM,sBACNC,cAAc,EACdC,SAAS,EACTC,OAAQ,yBACRC,SAAS,EACTC,SAAUZ,IAIGN,GAAI,UAAU,WAE3B3B,EAAG,wCACD2B,GAAI,QAAQ,WAEZM,EAAMK,mBAMXtC,GAAG,WAwBFyB,YAvBqB,WACpBzB,EAAG,YAAa8C,MAAM,WACrB,IAAIC,EAAO/C,EAAG6B,MACVmB,EAAMD,EAAKE,KAAM,YACrBF,EAAKE,KAAM,QAASD,MAGrBhD,EAAG,YAAa8C,MAAM,WACrB,IAAIC,EAAO/C,EAAG6B,MACVqB,EAAMH,EAAKE,KAAM,YACrBF,EAAKE,KAAM,MAAOC,MAGnBlD,EAAG,gBAAiB8C,MAAM,WACzB,IAAIC,EAAO/C,EAAG6B,MACVsB,EAAUJ,EAAKE,KAAM,MAEzBjD,EAAEoD,IAAK,kBAAkB,SAAUC,GAClC,IAAIC,EAAUtD,EAAG,IAAMmD,EAASE,GAAQ,GAAIE,UAC5CR,EAAKS,KAAMF,WAIc","file":"main.min.js","sourcesContent":["let $ = jQuery.noConflict();\n\njQuery( document ).ready( function( $ ) {\n\t$( '.init-hidden-sm' ).removeClass( 'init-hidden-sm' );\n\n\t// On scroll actions\n\twindow.onscroll = function() {\n\t\tif ( $( window ).scrollTop() > 0 ) {\n\t\t\t$( 'body' ).addClass( 'show-overlay' );\n\t\t} else {\n\t\t\t$( 'body' ).removeClass( 'show-overlay' );\n\t\t}\n\t};\n\t// End On scroll actions\n\n\t$( window ).scroll();\n\n} );\n\n$( function() {\n\t// Scroll to item if hash was presented in the URL\n\tif(window.location.hash) {\n\t\tlet scroll_callback = function(){\n\t\t\tlet hash = window.location.hash;\n\t\t\tif ( !$( hash ).length ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tscrollToObj( hash, '#sticky_bar' );\n\t\t};\n\t\tsetTimeout(scroll_callback, 300);\n\t}\n\n\t// On link click actions\n\t$( 'a' )\n\t\t.not( '.carousel-control-prev, .carousel-control-next' )\n\t\t.on( 'click', function( event ) {\n\t\t\t// Scroll to fix\n\t\t\t// Make sure this.hash has a value before overriding default behavior\n\t\t\tif ( this.hash !== '' ) {\n\t\t\t\t// Store hash\n\t\t\t\tlet hash = this.hash;\n\n\t\t\t\tif ( !$( hash ).length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prevent default anchor click behavior\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscrollToObj( hash, '#sticky_bar' );\n\t\t\t}\n\t\t\t// End scroll to fix\n\t\t} );\n\t// End On link click actions\n\n\t// 'Carousel jumping' fix\n\t$( 'a[class^=carousel-control-]' ).click( function( event ) {\n\t\tevent.preventDefault();\n\t} );\n\t$( 'a[class^=carousel-control-]' ).off( 'click' );\n} );\n\n// Masonry grid + Infinite scroll\n$( function() {\n\tlet msnry, imgLoad;\n\tif ( typeof Masonry !== 'undefined' ) {\n\t\tmsnry = new Masonry( '.posts_container', {\n\t\t\titemSelector: '.post'\n\t\t} );\n\t\timgLoad = imagesLoaded( $( '.posts_container' ) );\n\t\t// Reloads masonry grid after image loads. Lazyload fix.\n\t\timgLoad.on( 'progress', function() {\n\t\t\tmsnry.layout();\n\t\t} );\n\t} else {\n\t\tmsnry = null;\n\t}\n\n\tif ( typeof InfiniteScroll !== 'undefined' &&\n\t\t$( '.infinite_next_link' ).length ) {\n\n\t\t// make imagesLoaded available for InfiniteScroll\n\t\tInfiniteScroll.imagesLoaded = imagesLoaded;\n\n\t\t// init Infinite Scroll\n\t\tlet postsInfinite = new InfiniteScroll( '#infinite_scroll_container', {\n\t\t\tpath: '.infinite_next_link',\n\t\t\tloadOnScroll: true,\n\t\t\tprefill: false,\n\t\t\tappend: '.posts_container .post',\n\t\t\thistory: false,\n\t\t\toutlayer: msnry\n\t\t} );\n\n\t\t// Triggers when new page loaded and appended\n\t\tpostsInfinite.on( 'append', function() {\n\t\t\t// \tReloads masonry grid after image loads. Lazyload fix.\n\t\t\t$( '.posts_container .post-thumbnail img' )\n\t\t\t\t.on( 'load', function() {\n\t\t\t\t\t// $grid.masonry( 'layout' );\n\t\t\t\t\tmsnry.layout();\n\t\t\t\t} );\n\t\t} );\n\t}\n} );\n\n$( function() {\n\tlet lazy_functions = function() {\n\t\t$( '.lazycss' ).each( function() {\n\t\t\tlet lazy = $( this );\n\t\t\tlet css = lazy.attr( 'data-css' );\n\t\t\tlazy.attr( 'style', css );\n\t\t} );\n\n\t\t$( '.lazysrc' ).each( function() {\n\t\t\tlet lazy = $( this );\n\t\t\tlet src = lazy.attr( 'data-src' );\n\t\t\tlazy.attr( 'src', src );\n\t\t} );\n\n\t\t$( '.lazycontent' ).each( function() {\n\t\t\tlet lazy = $( this );\n\t\t\tlet lazy_id = lazy.attr( 'id' );\n\t\t\t// lazy.load( \" #\"+lazy_id );\n\t\t\t$.get( '?lazycontent=1', function( data ) {\n\t\t\t\tlet content = $( '#' + lazy_id, data )[ 0 ].innerHTML;\n\t\t\t\tlazy.html( content );\n\t\t\t} );\n\t\t} );\n\t};\n\tsetTimeout( lazy_functions, 500 );\n} );\n\nfunction scrollToObj( selector, correction ) {\n\tlet p = $( selector );\n\tlet position = p.offset();\n\tlet correction_value = 0;\n\tif ( parseInt( correction ) > 0 ) {\n\t\tcorrection_value = correction;\n\t} else if ( $( correction ).length > 0 ) {\n\t\tcorrection_value = $( correction ).outerHeight();\n\t}\n\tlet y = position.top - correction_value;\n\t$( 'html, body' ).animate( {\n\t\tscrollTop: y\n\t}, 100 );\n}"]}